apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "frontend.fullname" . }}-blue
  labels:
    app.kubernetes.io/name: {{ include "frontend.name" . }}
    helm.sh/chart: {{ include "frontend.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if eq .Values.production.deployment "blue" }}
  replicas: {{ .Values.green.replicaCount }}
  {{- else }}
  replicas: {{ .Values.blue.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "frontend.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "frontend.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        deployment: blue
    spec:
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "frontend.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.blue.image.repository}}:{{ .Values.blue.image.tag }}"
          imagePullPolicy: {{ .Values.blue.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
